# Example .tmux.conf

# By Nicholas Marriott. Public domain.

# Some tweaks to the status line
set -g status-right "%H:%M"
#set -g window-status-current-attr "underscore"
set -g status-bg cyan
setw -g mode-keys vi
set -g status-fg black

# Open panes in current directory
bind '"' split-window -v -c "#{pane_current_path}"
bind % split-window -h -c "#{pane_current_path}"



# If running inside tmux ($TMUX is set), then change the status line to red
%if #{TMUX}
set -g status-bg red
%endif

# Copy selected text to the system clipboard when using the mouse
bind-key -T copy-mode-vi MouseDragEnd1Pane send-keys -X copy-pipe-and-cancel "xclip -in -selection clipboard"
# Copy selected text to the system clipboard when using the mouse in normal mode
bind-key -n -T root MouseDrag1Pane if-shell -F -t = "#{mouse_any_flag}" "send-keys -M" "if -Ft= '#{pane_in_mode}' 'send-keys -M' 'copy-mode -H; send-keys -X begin-selection; send-keys -X copy-pipe-and-cancel \"xclip -in -selection clipboard\"'"


# Enable RGB colour if running in xterm(1)
set-option -sa terminal-overrides ",xterm*:Tc"

# Change the default $TERM to tmux-256color
set -g default-terminal "tmux-256color"

# No bells at all
set -g bell-action none

# Keep windows around after they exit
set -g remain-on-exit off

# Change the prefix key to C-a
#set -g prefix C-Space
set -g prefix C-a
unbind C-b
bind C-a send-prefix


# Bind key to reload conf
bind r source-file ~/.tmux.conf \; display-message "Reloaded config"

# Turn the mouse on, but without copy mode dragging
set -g mouse on
unbind -n MouseDrag1Pane
unbind -Tcopy-mode MouseDrag1Pane

# Instead of using Ctrl+[, bind F4 to enter copy mode
unbind-key -T root C-[
bind-key -n F4 copy-mode
# binds F1 to zoom in 
bind-key -n F1 resize-pane -Z
unbind F8
bind-key -n F8 command-prompt -I "rename-window -t #W "
bind-key -n F9 command-prompt -I "rename-session -t #S "
bind F11 selectw -t:20 # buffer key so it just selects session 20 or some shit
bind-key -n F12 kill-pane

# Keys to toggle monitoring activity in a window, and synchronize-panes
bind m set monitor-activity
bind y set synchronize-panes\; display 'synchronize-panes #{?synchronize-panes,on,off}'

# Join windows
bind-key t command-prompt -p "join pane to:" "join-pane -t '%%'"
bind-key j command-prompt -p "join pane to:" "join-pane -t '%%'"

# Create a single default session, because a session is created here, tmux
# should be started with "tmux attach" rather than "tmux new"
if-shell "test -z $TMUX" "new -d -s0 -nirssi 'exec irssi'"
if-shell "test -z $TMUX" "set -t0:0 monitor-activity on"
if-shell "test -z $TMUX" "set -t0:0 aggressive-resize on"
if-shell "test -z $TMUX" "neww -d -ntodo 'exec emacs ~/TODO'"
if-shell "test -z $TMUX" "setw -t0:1 aggressive-resize on"
if-shell "test -z $TMUX" "neww -d -nmutt 'exec mutt'"
if-shell "test -z $TMUX" "setw -t0:2 aggressive-resize on"
if-shell "test -z $TMUX" "neww -d"
if-shell "test -z $TMUX" "neww -d"
if-shell "test -z $TMUX" "neww -d"

# Vim-style searching in copy mode
bind-key -T copy-mode-vi / command-prompt -i -p "search down" "send -X search-forward-incremental \"%%%\""
bind-key -T copy-mode-vi ? command-prompt -i -p "search up" "send -X search-backward-incremental \"%%%\""

# System clipboard integration
set -g set-clipboard on
bind-key -T copy-mode-vi y send-keys -X copy-pipe-and-cancel "xclip -in -selection clipboard"
bind-key -T copy-mode-vi Enter send-keys -X copy-pipe-and-cancel "xclip -in -selection clipboard"
